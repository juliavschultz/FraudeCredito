# -*- coding: utf-8 -*-
"""cartao-fraude.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1AshpJ1hABK7qtGsJhJ7XHmFSuuLI4oIo
"""


#para o streamlit---------------------------------------------
#--------BIBLIOTECAS
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier


#--------LENDO ARQUIVO
arquivo = pd.read_csv('Creditofraude.csv', sep=',')
#classificação de transação legítima==0 e fraudulenta==1
nomesClassesED=['LEGÍTIMA', 'FRAUDE']

#--------SEPARANDO COLUNAS

colunas = arquivo.columns.to_list()
nomesColunas = colunas [1:2]
nomescol = colunas [3]
dataset_features = arquivo[nomesColunas]
dataset_classes = arquivo[nomescol]

#print(set(dataset_classes))
#print(set(dataset_features))

#--------DIVISÃO DOS DADOS DE TREINO E TESTE
feature_treino,feature_teste,classes_treino,classes_teste = train_test_split(dataset_features,
                                                                             dataset_classes,
                                                                             test_size=0.25,
                                                                             random_state=12)

#--------CONSTRUÇÃO DA ARVORE
arvore = DecisionTreeClassifier()
arvore.fit(feature_treino,classes_treino)


#--------ENTRADA STREAMLIT
import streamlit as st

st.number_input('Digite o tempo em segundos entre as ultimas transações:', key='tempo')
st.number_input('Digite o valor da transação:', key='valor')

if st.button('Analisar transação'):
 individuo = [st.session_state.tempo, st.session_state.valor]
 predicao = arvore.predict([individuo])
 st.write('A análise identifica a transação como: '+nomes_classes[int(predicao[0])])
